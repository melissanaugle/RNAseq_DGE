require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
data_recov$log_averagered = log10(data_recov$AverageRed+1)
setwd(dir = "~/Desktop/GitHub/CBASS_bleachingdata/")
#rm( list = ls())
graphics.off()
library(ggplot2)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
# Analysis of variance (2-way) ANOVA CBASS
red.CBASS.lm <- lm(log_averagered ~ Site * Ramp, data = data_recov)
setwd(dir = "~/Desktop/GitHub/CBASS_bleachingdata/")
#rm( list = ls())
graphics.off()
library(ggplot2)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
Anova(red.CBASS.lm, type = "III")
setwd(dir = "~/Desktop/GitHub/CBASS_bleachingdata/")
#rm( list = ls())
graphics.off()
library(ggplot2)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
# Model fitting and assumptions diagnostic
plot(log_averagered ~ interaction(Site,Ramp), data = data_recov) # Box-plot homogeinity of variance
setwd(dir = "~/Desktop/GitHub/CBASS_bleachingdata/")
#rm( list = ls())
graphics.off()
library(ggplot2)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
leveneTest(log_averagered ~ Site * Ramp, data=data_recov)
setwd(dir = "~/Desktop/GitHub/CBASS_bleachingdata/")
#rm( list = ls())
graphics.off()
library(ggplot2)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
# formal statistical test for homogeinity of variance
# signif
plot(red.CBASS.lm, 1) # Residual vs Fitted values
setwd(dir = "~/Desktop/GitHub/CBASS_bleachingdata/")
#rm( list = ls())
graphics.off()
library(ggplot2)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
qqnorm(resid(red.CBASS.lm)); qqline(resid(red.CBASS.lm))
setwd(dir = "~/Desktop/GitHub/CBASS_bleachingdata/")
#rm( list = ls())
graphics.off()
library(ggplot2)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
# qq plot to check for normal distribution of residuals
#mostly normal
hist(resid(pam.CBASS.lm)) # histogram of residuals to check for normal distribution of residuals
setwd(dir = "~/Desktop/GitHub/CBASS_bleachingdata/")
#rm( list = ls())
graphics.off()
library(ggplot2)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
# qq plot to check for normal distribution of residuals
#mostly normal
#hist(resid(pam.CBASS.lm)) # histogram of residuals to check for normal distribution of residuals
shapiro.test(red.CBASS.lm$residuals)
setwd(dir = "~/Desktop/GitHub/CBASS_bleachingdata/")
#rm( list = ls())
graphics.off()
library(ggplot2)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
# Analysis of variance (2-way) ANOVA CBASS
red.CBASS.lm <- lm(log_averagered ~ Site * Ramp, data = data_recov)
setwd(dir = "~/Desktop/GitHub/CBASS_bleachingdata/")
#rm( list = ls())
graphics.off()
library(ggplot2)
require(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
library(car)
library(lmerTest)
library(emmeans)
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
Anova(red.CBASS.lm, type = "III")
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
data_stress <- data %>%
filter(data$Time.point == "Stress")
ggplot(data=data_stress, aes(x=Site, y = AverageRed, fill = Ramp))+
geom_boxplot() + theme_minimal()  +
ylab("Average Red Intensity \n (Higher = more bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggplot(data=data_stress, aes(x=Site, y = AverageRed, fill = Ramp))+
geom_boxplot() + theme_minimal()  + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow3"))  +
ylab("Average Red Intensity \n (Higher = more bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggplot(data=data_stress, aes(x=Site, y = AverageRed, fill = Ramp))+
geom_boxplot() + theme_minimal()  + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow2"))  +
ylab("Average Red Intensity \n (Higher = more bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggsave("../../CSUMB/Thesis/Data analysis/Figures - bleaching phys/10232020/AvgRed_stress.pdf", height = 5, width = 8)
ggplot(data=data_stress, aes(x=Site, y = AverageRed, fill = Ramp))+
geom_boxplot() + theme_minimal()  + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow2"))  +
ylab("Average Red Intensity \n (Higher = more bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggsave("../../CSUMB/Thesis/Data analysis/Figures - bleaching phys/10232020/AvgRed_stress.pdf", height = 5, width = 8)
ggplot(data=data_stress, aes(x=Site, y = AverageRed, fill = Ramp))+
geom_boxplot() + theme_minimal()  + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow2"))  +
ylab("Average Red Intensity \n Stress Time Point \n (Higher = more bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggsave("../../CSUMB/Thesis/Data analysis/Figures - bleaching phys/10232020/AvgRed_stress.pdf", height = 5, width = 8)
data_recovery <- data %>%
filter(data$Time.point == "Recovery")
ggplot(data=data_recovery, aes(x=Site, y = AverageRed, fill = Ramp))+
geom_boxplot() + theme_minimal()  + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow2"))  +
ylab("Average Red Intensity \n Recovery Time Point \n (Higher = more bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggsave("../../CSUMB/Thesis/Data analysis/Figures - bleaching phys/10232020/AvgRed_stress.pdf", height = 5, width = 8)
data_stress <- data %>%
filter(data$Time.point == "Stress")
ggplot(data=data_stress, aes(x=Site, y = AverageRed, fill = Ramp))+
geom_boxplot() + theme_minimal()  + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow2"))  +
ylab("Average Red Intensity \n Stress Time Point \n (Higher = more bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggsave("../../CSUMB/Thesis/Data analysis/Figures - bleaching phys/10232020/AvgRed_stress.pdf", height = 5, width = 8)
data_recovery <- data %>%
filter(data$Time.point == "Recovery")
ggplot(data=data_recovery, aes(x=Site, y = AverageRed, fill = Ramp))+
geom_boxplot() + theme_minimal()  + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow2"))  +
ylab("Average Red Intensity \n Recovery Time Point \n (Higher = more bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggsave("../../CSUMB/Thesis/Data analysis/Figures - bleaching phys/10232020/AvgRed_recovery.pdf", height = 5, width = 8)
rm( list = ls())
graphics.off()
data <- read.csv("raw data sheets/MasterASData.csv")
head(data)
data$Time.point <- as.character(data$Time.point)
data$Time.point[data$Ramp == "Field"] <- "Field"
data$CWchange1 <- data$Coral.Watch.Color1 - data$Coral.Watch.Color2
data$CWchange2 <- data$Coral.Watch.Color1 - data$Coral.Watch.Color3
data$Time.point <- factor(data$Time.point, levels = c('Field', 'Stress', 'Recovery'),ordered = TRUE)
ggplot(data=data, aes(x=Site, y = CWchange1, fill = Time.point))+
geom_boxplot() + theme_minimal() + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow2")) +
ylab("Color Score T1 - T2 \n (higher = more bleached, lower = less bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggplot(data=data, aes(x=Site, y = CWchange1, fill = Site))+
geom_boxplot() + theme_minimal() + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow2")) +
ylab("Color Score T1 - T2 \n (higher = more bleached, lower = less bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggplot(data=data, aes(x=Site, y = CWchange1, fill = Ramp))+
geom_boxplot() + theme_minimal() + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow2")) +
ylab("Color Score T1 - T2 \n (higher = more bleached, lower = less bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggsave("../../CSUMB/Thesis/Data analysis/Figures - bleaching phys/10232020/CW_all_T1-T2_raw.pdf", height = 5, width = 8)
ggplot(data=data, aes(x=Site, y = CWchange2, fill = Ramp))+
geom_boxplot() + theme_minimal() + scale_fill_manual(values = c("dodgerblue4", "cyan4", "springgreen3", "yellow2")) +
ylab("Color Score T1 - T3 \n (higher = more bleached, lower = less bleached)") + xlab("") + theme(axis.text=element_text(size=14))
ggsave("../../CSUMB/Thesis/Data analysis/Figures - bleaching phys/10232020/CW_all_T1-T3_raw.pdf", height = 5, width = 8)
setwd(dir = "~/Desktop/GitHub/Symbiont_qPCR/")
rm( list = ls())
graphics.off()
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(reshape2)
library(mosaic)
dat1 <- read.csv("cleandata/08_05_20_fields1-4.csv")
dat2 <- read.csv("cleandata/10_14_20_fields5-8.csv")
dat <- rbind(dat1,dat2)
nrow(dat)
head(dat)
dat$FAM <- as.numeric(dat$FAM)
dat$VIC <- as.numeric(dat$VIC)
dat$Site = "n"
dat <- mutate(dat, Site = derivedFactor(
"Faga'tele" = (grepl("Tele", dat$Sample)),
"Faga'alu" = (grepl("Alu", dat$Sample)),
"Vatia" = (grepl("Vat", dat$Sample)),
"Cannery" = (grepl("Can", dat$Sample)),
"Coconut Point" = (grepl("Coco", dat$Sample)),
"Neg Control" = (grepl("ontrol", dat$Sample)),
method ="first",
.default = NA
))
dat <- dat[!(dat$Site == "Neg Control"),]
dat_melt <- melt(dat, id.vars = c("Sample", "Site"), measure.vars = c("FAM", "VIC"))
head(dat_melt)
ggplot(dat_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "ForestGreen"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
dat2 <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC))
head(dat2)
#reformat for plotting
dat2_melt <- melt(dat2, id.vars = c("Sample", "Site"), measure.vars = c("FAM_mean", "VIC_mean"))
head(dat2_melt)
ggplot(dat2_melt, aes(x = Site, y = value, fill = variable)) +
geom_boxplot() + theme_bw() + scale_fill_manual("Symbiont species",
values = c("Blue", "ForestGreen"), labels = c("D. trenchii", "C. goreaui")) +
ylab("Ct Value (lower = MORE of that symbiont)")
# removes NAs (so not all three need to amplify (*maybe should change this*)
# then summarizes by site
replicate_means <- dat %>%
group_by(Sample, Site) %>%
filter(!FAM == "NaN") %>%
filter(!VIC == "NaN") %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC)) %>%
filter(!Site == "")
replicate_means$CD_ratio <- (replicate_means$VIC_mean / replicate_means$FAM_mean)
replicate_means$Sample <- as.character(replicate_means$Sample)
ggplot(replicate_means, aes(Site, CD_ratio, fill = Site)) +
geom_boxplot() + theme_minimal() + ylab("C:D Log Ratio")
is.nan.data.frame <- function(x)
do.call(cbind, lapply(x, is.nan))
dat[is.nan(dat)] <- 40
dat_sum <- dat %>%
group_by(Sample, Site) %>%
summarize(FAM_mean = mean(FAM), VIC_mean = mean(VIC))
ggplot(dat_sum, aes(x = FAM_mean, y = VIC_mean, col = Site)) +
geom_point(size = 6) + theme_bw() + xlab("D. trenchii") + ylab("C. goreaui") +
scale_color_brewer(palette = "RdYlGn", direction = -1)
dat_sum
dat_sum$Site <- factor(dat_sum$Site, levels = c("Faga'tele", "Vatia","Faga'alu", "Cannery", "Coconut Point"))
ggplot(dat_sum, aes(x = FAM_mean, y = VIC_mean, col = Site)) +
geom_point(size = 6) + theme_bw() + xlab("D. trenchii") + ylab("C. goreaui") +
scale_color_brewer(palette = "RdYlGn", direction = -1)
ggsave("figures/symbiont_coords_12112020.pdf", width = 6, height = 4)
ggplot(dat_sum, aes(x = FAM_mean, y = VIC_mean, col = Site)) +
geom_point(size = 6) + theme_bw() + xlab("D. trenchii Ct value") + ylab("C. goreaui Ct value") +
scale_color_brewer(palette = "RdYlGn", direction = -1)
ggsave("figures/symbiont_coords_12112020.pdf", width = 6, height = 4)
setwd("/Users/Melissa/Desktop/GitHub/RNAseq_DGE/")
# using p = 0.05 data
data <- read.csv("data/diffExpr.P0.05_C2.matrix.log2.centered.dat.csv", header=TRUE)
head(data)
nrow(data)
#Check for row duplicates
data[duplicated(data) | duplicated(data, fromLast=TRUE), ]
duplicated(data)
#include only numerical columns (expression values)
dat <- data[,2:length(data)]
#row names are 1st column (Trinity_ID)
rownames(dat) <- data[,1]
head(dat)
nrow(dat)
#cluster rows
row.order <- hclust(dist(dat))$order
#cluster columns by sample order
col.order <-c(1,2,3,4,9,10,11,12,16,17,18,5,6,7,8,13,14,15,19,20,21,22)
#re-order matrix according to clustering
dat_clust <- dat[row.order, col.order] # re-order matrix according to clustering
#reshape into data frame
df_molten_dat <- melt(as.matrix(dat_clust))
names(df_molten_dat)[c(1:2)] <- c("Trinity_ID", "treatment")
df_molten_dat
max(df_molten_dat$value)
min(df_molten_dat$value)
mean(df_molten_dat$value)
IQR(df_molten_dat$value)
#plot heatmap
g<-ggplot(df_molten_dat, aes(x=treatment,y=Trinity_ID)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2(low="blue", mid="black", high="orange", midpoint=0,    limits=c(-5,5)) +
ylab("Genes") +
xlab("Treatment") +
ggtitle("DGE in corals under heat stress at 3 sites") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 12),
plot.title = element_text(size=10),
axis.title = element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(angle = 20, size = 5))+
labs(fill = "Log2 Fold Change")
g
head(df_molten_dat)
head(df_molten_dat)
nrow(df_molten_dat)
nrow(dat)
#plot heatmap
g<-ggplot(df_molten_dat, aes(x=treatment,y=Trinity_ID)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2(low="blue", mid="black", high="orange", midpoint=0,    limits=c(-5,5)) +
ylab("Genes") +
xlab("Treatment") +
ggtitle("DGE in corals under heat stress at 3 sites") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 12),
plot.title = element_text(size=10),
axis.title = element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(angle = 20, size = 5))+
labs(fill = "Log2 Fold Change")
g
g
#plot heatmap
g<-ggplot(df_molten_dat, aes(x=treatment,y=Trinity_ID)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2(low="blue", mid="black", high="orange", midpoint=0,    limits=c(-5,5)) +
ylab("Genes") +
xlab("Treatment") +
ggtitle("DGE in corals under heat stress at 3 sites") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 12),
plot.title = element_text(size=10),
axis.title = element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(angle = 20, size = 5))+
labs(fill = "Log2 Fold Change")
#cluster columns by sample order
col.order <-c(1,2,3,4,9,10,11,12,17,16,18,5,7,6,8,13,14,15,20,21,22,19)
#re-order matrix according to clustering
dat_clust <- dat[row.order, col.order] # re-order matrix according to clustering
#cluster rows
row.order <- hclust(dist(dat))$order
#cluster columns by sample order
col.order <-c(1,2,3,4,9,10,11,12,17,16,18,5,7,6,8,13,14,15,20,21,22,19)
#re-order matrix according to clustering
dat_clust <- dat[row.order, col.order] # re-order matrix according to clustering
#reshape into data frame
df_molten_dat <- melt(as.matrix(dat_clust))
names(df_molten_dat)[c(1:2)] <- c("Trinity_ID", "treatment")
df_molten_dat
max(df_molten_dat$value)
min(df_molten_dat$value)
mean(df_molten_dat$value)
IQR(df_molten_dat$value)
#plot heatmap
g<-ggplot(df_molten_dat, aes(x=treatment,y=Trinity_ID)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2(low="blue", mid="black", high="orange", midpoint=0,    limits=c(-5,5)) +
ylab("Genes") +
xlab("Treatment") +
ggtitle("DGE in corals under heat stress at 3 sites") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 12),
plot.title = element_text(size=10),
axis.title = element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(angle = 20, size = 5))+
labs(fill = "Log2 Fold Change")
g
ggsave("Heatmap1_newcluster.png",plot=g)
ggsave("Heatmap1_newcluster.png",plot=g)
setwd("/Users/Melissa/Desktop/GitHub/RNAseq_DGE/")
data <- read.csv("data/diffExpr.P0.05_C2.matrix.log2.centered.dat.csv", header=TRUE)
head(data)
nrow(data)
#Check for row duplicates
data[duplicated(data) | duplicated(data, fromLast=TRUE), ]
duplicated(data)
#Re-organize data
#include only numerical columns (expression values)
dat <- data[,2:length(data)]
#row names are 1st column (Trinity_ID)
rownames(dat) <- data[,1]
head(dat)
nrow(dat)
#cluster rows
row.order <- hclust(dist(dat))$order
#cluster columns by sample order
col.order <-c(1,2,3,4,9,10,11,12,17,16,18,5,7,6,8,13,14,15,20,21,22,19)
#re-order matrix according to clustering
dat_clust <- dat[row.order, col.order] # re-order matrix according to clustering
#reshape into data frame
df_molten_dat <- melt(as.matrix(dat_clust))
names(df_molten_dat)[c(1:2)] <- c("Trinity_ID", "treatment")
df_molten_dat
#Find min and max of value column in data frame to determine range of heatmap
max(df_molten_dat$value)
min(df_molten_dat$value)
mean(df_molten_dat$value)
IQR(df_molten_dat$value)
#plot heatmap
g<-ggplot(df_molten_dat, aes(x=treatment,y=Trinity_ID)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2(low="blue", mid="black", high="orange", midpoint=0,    limits=c(-5,5)) +
ylab("Genes") +
xlab("Treatment") +
ggtitle("DGE in corals under heat stress at 3 sites") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 12),
plot.title = element_text(size=10),
axis.title = element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(angle = 20, size = 5))+
labs(fill = "Log2 Fold Change")
g
#include only numerical columns (expression values)
dat <- data[,2:length(data)]
#row names are 1st column (Trinity_ID)
rownames(dat) <- data[,1]
head(dat)
nrow(dat)
#cluster rows
row.order <- hclust(dist(dat))$order
#cluster columns by sample order
col.order <-c(1,2,3,4,9,10,11,12,17,16,18,5,7,6,8,13,14,15,20,22,19,21)
#re-order matrix according to clustering
dat_clust <- dat[row.order, col.order] # re-order matrix according to clustering
#reshape into data frame
df_molten_dat <- melt(as.matrix(dat_clust))
names(df_molten_dat)[c(1:2)] <- c("Trinity_ID", "treatment")
df_molten_dat
#plot heatmap
g<-ggplot(df_molten_dat, aes(x=treatment,y=Trinity_ID)) +
geom_tile(aes(fill = value)) +
scale_fill_gradient2(low="blue", mid="black", high="orange", midpoint=0,    limits=c(-5,5)) +
ylab("Genes") +
xlab("Treatment") +
ggtitle("DGE in corals under heat stress at 3 sites") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 12),
plot.title = element_text(size=10),
axis.title = element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(angle = 20, size = 5))+
labs(fill = "Log2 Fold Change")
g
ggsave("Heatmap1_newcluster.png",plot=g)
ggsave("Heatmap1_newcluster.png",plot=g)
